# Development environment buildout
# ================================

[buildout]
parts =
    instance
    test
    coverage-report
    omelette
    zopepy
    zopeskel
    checkversions
    mkrelease
    paster
    i18ndude
    robot

#    worker

# # Packages to check out/update when buildout is run
auto-checkout =
    edeposit.policy 
    edeposit.content
    edeposit.user
    edeposit.theme

#    collective.zamqpdemo

#    edeposit.theme




#    edeposit.amqp.antivir

extends =
    packages.cfg

# Development Zope instance. Installs the ``bin/instance`` script
[instance]
recipe = plone.recipe.zope2instance
http-address = 8080
user = admin:admin
verbose-security = on
locales = ${buildout:directory}/locales
#event-log-level = debug
environment-vars =
    PTS_LANGUAGES en cs
    zope_i18n_allowed_languages en cs
    zope_i18n_compile_mo_files true
    ZAMQP_LOGLEVEL DEBUG

eggs =
    ${eggs:main}
    ${eggs:devtools}
zcml =
    collective.oaiintercom
zope-conf-additional =
    %import collective.zamqp
    <amqp-broker-connection>
        connection_id   aleph
        hostname        localhost
        virtual_host    aleph
        port            5672
        username        guest
        password        guest
        producer        true
        keepalive       30
        heartbeat       120
    </amqp-broker-connection>

    <amqp-broker-connection>
        connection_id   antivirus
        hostname        localhost
        virtual_host    antivirus
        port            5672
        username        guest
        password        guest
        producer        true
        keepalive       30
        heartbeat       120
    </amqp-broker-connection>

    <amqp-broker-connection>
        connection_id   calibre
        hostname        localhost
        virtual_host    calibre
        port            5672
        username        guest
        password        guest
        producer        true
        keepalive       30
        heartbeat       120
    </amqp-broker-connection>

    <amqp-broker-connection>
        connection_id   ftp
        hostname        localhost
        virtual_host    calibre
        port            5672
        username        guest
        password        guest
        producer        true
        keepalive       30
        heartbeat       120
    </amqp-broker-connection>
    <amqp-broker-connection>
        connection_id   pdfgen
        hostname        localhost
        virtual_host    pdfgen
        port            5672
        username        guest
        password        guest
        producer        true
        keepalive       30
        heartbeat       120
    </amqp-broker-connection>
    <amqp-broker-connection>
        connection_id   plone
        hostname        localhost
        virtual_host    plone
        port            5672
        username        guest
        password        guest
        producer        true
        keepalive       30
        heartbeat       120
    </amqp-broker-connection>

    <amqp-consuming-server>
        connection_id   aleph
        site_id         Plone
        user_id         admin
    </amqp-consuming-server>

    <amqp-consuming-server>
        connection_id   antivirus
        site_id         Plone
        user_id         admin
    </amqp-consuming-server>

    <amqp-consuming-server>
        connection_id   calibre
        site_id         Plone
        user_id         admin
    </amqp-consuming-server>

    <amqp-consuming-server>
        connection_id   ftp
        site_id         Plone
        user_id         admin
    </amqp-consuming-server>

    <amqp-consuming-server>
        connection_id   pdfgen
        site_id         Plone
        user_id         admin
    </amqp-consuming-server>

    <amqp-consuming-server>
        connection_id   plone
        site_id         Plone
        user_id         admin
    </amqp-consuming-server>

zserver-threads = 1

# [worker]
# <= instance
# http-address = 8081
# zserver-threads = 1
# environment-vars =
#     ZAMQP_LOGLEVEL DEBUG
# zope-conf-additional =
#     ${instance:zope-conf-additional}
#     <amqp-consuming-server>
#         connection_id   aleph
#         site_id         Plone
#         user_id         admin
#     </amqp-consuming-server>

# Test runner. Run: ``bin/test`` to execute all tests
[test]
recipe = zc.recipe.testrunner
eggs = ${eggs:test}
defaults = ['--auto-color', '--auto-progress']

# Coverage report generator.
# Run: ``bin/test --coverage=coverage``
# and then: ``bin/coveragereport``
[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coveragereport
arguments = ('parts/test/coverage', 'coverage')

# Installs links to all installed packages to ``parts/omelette``.
# On Windows, you need to install junction.exe first
[omelette]
recipe = collective.recipe.omelette
eggs = 
    ${eggs:main}
    ${eggs:devtools}

# Installs the ``bin/zopepy`` interpreter.
[zopepy]
recipe = zc.recipe.egg
eggs = 
    ${eggs:main}
    ${eggs:devtools}
interpreter = zopepy

# Installs ZopeSkel, which can be used to create new packages
# Run: ``bin/zopeskel``
[zopeskel]
recipe = zc.recipe.egg
eggs = 
     ZopeSkel < 3.0dev
     zopeskel.dexterity

# Tool to help check for new versions.
# Run: ``bin/checkversions versions.cfg``
[checkversions]
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]

# Tool to make releases
# Run: ``bin/mkrelease --help``
[mkrelease]
recipe = zc.recipe.egg
eggs = jarn.mkrelease


[paster]
recipe = zc.recipe.egg
eggs =
   ZopeSkel < 3.0dev
   Paste
   PasteScript
   PasteDeploy
   zopeskel.dexterity
   ${instance:eggs}
entry-points = paster=paste.script.command:run

[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

[robot]
recipe = zc.recipe.egg
environment-vars =
    PTS_LANGUAGES en cs
    zope_i18n_allowed_languages en cs
    zope_i18n_compile_mo_files true
    ZAMQP_LOGLEVEL DEBUG
eggs =
    Pillow
    ${test:eggs}
    plone.app.robotframework[reload]
zope-conf-additional =
    %import collective.zamqp
    <amqp-broker-connection>
        connection_id   aleph
        hostname        localhost
        virtual_host    aleph
        port            5672
        username        guest
        password        guest
        producer        true
        keepalive       30
        heartbeat       120
    </amqp-broker-connection>
    <amqp-broker-connection>
        connection_id   antivirus
        hostname        localhost
        virtual_host    antivirus
        port            5672
        username        guest
        password        guest
        producer        true
        keepalive       30
        heartbeat       120
    </amqp-broker-connection>
    <amqp-broker-connection>
        connection_id   calibre
        hostname        localhost
        virtual_host    calibre
        port            5672
        username        guest
        password        guest
        producer        true
        keepalive       30
        heartbeat       120
    </amqp-broker-connection>
    <amqp-broker-connection>
        connection_id   plone
        hostname        localhost
        virtual_host    plone
        port            5672
        username        guest
        password        guest
        producer        true
        keepalive       30
        heartbeat       120
    </amqp-broker-connection>
    <amqp-consuming-server>
        connection_id   aleph
        site_id         Plone
        user_id         admin
    </amqp-consuming-server>
    <amqp-consuming-server>
        connection_id   antivirus
        site_id         Plone
        user_id         admin
    </amqp-consuming-server>
    <amqp-consuming-server>
        connection_id   calibre
        site_id         Plone
        user_id         admin
    </amqp-consuming-server>
    <amqp-consuming-server>
        connection_id   plone
        site_id         Plone
        user_id         admin
    </amqp-consuming-server>
